Kinhom(epen) |> plot()
Kinhom(epen, correction = "iso") |> plot()
plot(density(mucosa))
plot(density(lansing))
plot(density(pp))
plot(density(amacrine))
plot(density(split(amacrine)))
plot(density(split(pp)))
#| fig-width: 10
#| fig-height: 10
ppls <- split(pp_sel) # split by mark
plot(density(ppls))
#| fig-width: 15
#| fig-height: 10
plotCrossAll(pp_sel, "Kcross.inhom", "iso")
#| fig-width: 15
#| fig-height: 10
plotCrossAll(pp_sel, "Kcross.inhom", "edge")
Kcross.inhom()
?Kcross.inhom
#| fig-width: 15
#| fig-height: 10
plotCrossAll(pp_sel, "Kcross.inhom", "border")
#| fig-width: 15
#| fig-height: 10
plotCrossAll(pp_sel, "Kcross.inhom", "iso")
marks(pp) <- factor(marks(pp))
selection <- c('OD Mature', 'Ependymal', 'Microglia')
pp_sel <-  subset(pp, marks %in% selection, drop = TRUE)
#| fig-width: 10
#| fig-height: 10
pp_sel |> as.data.frame() |>
ggplot(aes(x = x, y = y, color = marks)) +
geom_point() +
theme_minimal() +
coord_fixed() +
scale_color_brewer(palette = "Set1")
summary(pp)
sum(intensity(pp)) == intensity(unmark(pp))
#| fig-width: 10
#| fig-height: 10
ppls <- split(pp_sel) # split by mark
plot(density(ppls))
#| fig-width: 15
#| fig-height: 10
plotCrossAll(pp_sel, "Kcross.inhom", "border")
plot(Kcross.inhom(pp_sel))
plot(alltypes(Kcross.inhom(pp_sel)))
plot(alltypes(Kcross.inhom(pp_sel))
)
plot(alltypes((pp_sel, "Kcross.inhom"))
plot(alltypes(pp_sel, "Kcross.inhom"))
plot(alltypes(pp_sel, "Kcross.inhom"))
dev.off()
plot(alltypes(pp_sel, "Kcross.inhom"))
#| fig-width: 15
#| fig-height: 10
plotCrossAll(pp_sel, "Kcross.inhom", "iso")
#| warning: false
segregation.test(pp,nsim=19)
plotCrossAll(pp_sel, "Kcross", "iso")
#| echo: true
#| message: false
#| results: hide
plotCrossAll <- function(ppp, fun, edgecorr){
Fall <- alltypes(ppp, fun)
# Create a list of ggplot objects using lapply
plot_list <- lapply(Fall[["fns"]], function(res) {
ggplot(res, aes(x = r, y = .data[[edgecorr]])) +
geom_line(linewidth = 1) +
geom_line(aes(x = r, y = theo),
linetype = "dotted", linewidth = 1) +
geom_line() +
labs(title = attributes(res)$yexp) +
theme_minimal()
})
p <- wrap_plots(plot_list, nrow = ceiling(length(plot_list)/3), ncol = 3) +
plot_layout(guides = "collect") & theme(legend.position='bottom')
return(p)
}
plotCrossAll <- function(ppp, fun, edgecorr){
Fall <- alltypes(ppp, fun)
df.all <- data.frame()
for (l in Fall[["fns"]]) {
attr <- paste(attributes(l)$ylab[1])
df <- data.frame(l)
df$Function <- attr
df$from <- strsplit(attr, split = '\"')[[1]][4]
df.all <- rbind(df.all, df)
}
p <- ggplot(df.all, aes(x = r, y = iso, color = Function)) +
geom_line(linewidth = 1) +
geom_line(aes(x = r, y = theo),
linetype = "dotted", linewidth = 1, color = "black") +
geom_line() +
facet_wrap(~from) +
theme_minimal() +
scale_color_brewer(palette = "Set1")
return(p)
}
plotCrossAll <- function(ppp, fun, edgecorr){
Fall <- alltypes(ppp, fun)
df.all <- data.frame()
for (l in Fall[["fns"]]) {
attr <- paste(attributes(l)$ylab[1])
df <- data.frame(l)
df$Function <- attr
df$from <- strsplit(attr, split = '\"')[[1]][4]
df.all <- rbind(df.all, df)
}
p <- ggplot(df.all, aes(x = r, y = iso, color = Function)) +
geom_line(linewidth = 1) +
geom_line(aes(x = r, y = theo),
linetype = "dotted", linewidth = 1, color = "black") +
geom_line() +
facet_wrap(~from) +
theme_minimal() +
scale_color_brewer(palette = "Set1")
return(p)
}
#| fig-width: 15
#| fig-height: 10
plotCrossAll(pp_sel, "Kcross.inhom", "iso")
#| echo: true
#| message: false
#| results: hide
plotCrossMetric <- function(ppp, fun, from, to, edgecorr){
lce <- lohboot(ppp, fun, from = from, to = to)
p <- ggplot(lce, aes(x = r, y = .data[[edgecorr]])) +
geom_line(size = 1) +
geom_ribbon(aes(ymin = lo, ymax = hi), alpha = 0.25)+
geom_line(aes(x = r, y = theo), linetype = "dotted", size = 1) +
geom_line() +
labs(title = attributes(lce)$yexp) +
theme_minimal()
return(p)
}
p_epen_od <- plotCrossMetric(pp_sel, "Kcross.inhom",
"Ependymal", "OD Mature", "iso")
p_epend_micro <- plotCrossMetric(pp_sel, "Kcross.inhom",
"Ependymal", "Microglia", "iso")
# fig-width: 10
# fig-height: 10
p_epen_od + p_epend_micro
#| fig-width: 10
#| fig-height: 10
plotCrossAll(pp_sel, "markconnect", "iso") +
scale_y_continuous(limits = c(0, 1))
#| fig-width: 10
#| fig-height: 10
plotCrossAll(pp_sel, "markconnect", "iso")
plotCrossAll <- function(ppp, fun, edgecorr){
Fall <- alltypes(ppp, fun)
df.all <- data.frame()
for (l in Fall[["fns"]]) {
attr <- paste(attributes(l)$ylab[1])
df <- data.frame(l)
df$Function <- attr
df$from <- strsplit(attr, split = '\"')[[1]][4]
df.all <- rbind(df.all, df)
}
p <- ggplot(df.all, aes(x = r, y = iso, color = Function)) +
geom_line(linewidth = 1) +
geom_line(aes(x = r, y = theo),
linetype = "dotted", linewidth = 1, color = "black") +
geom_line() +
facet_wrap(~from) +
theme_minimal() +
scale_color_brewer(palette = "Set1")
return(p)
}
#| echo: true
#| message: false
#| results: hide
plotCrossAll <- function(ppp, fun, edgecorr){
Fall <- alltypes(ppp, fun)
# Create a list of ggplot objects using lapply
plot_list <- lapply(Fall[["fns"]], function(res) {
ggplot(res, aes(x = r, y = .data[[edgecorr]])) +
geom_line(linewidth = 1) +
geom_line(aes(x = r, y = theo),
linetype = "dotted", linewidth = 1) +
geom_line() +
labs(title = attributes(res)$yexp) +
theme_minimal()
})
p <- wrap_plots(plot_list, nrow = ceiling(length(plot_list)/3), ncol = 3) +
plot_layout(guides = "collect") & theme(legend.position='bottom')
return(p)
}
#| fig-width: 10
#| fig-height: 10
plotCrossAll(pp_sel, "markconnect", "iso") +
scale_y_continuous(limits = c(0, 1))
#| echo: true
#| message: false
#| results: hide
plotEnvCross <- function(pp, i, j, fun, nsim = 39, radius = 150, global = FALSE){
pp_scaled <- rescale(pp)
E1 <- envelope(pp_scaled, fun, nsim=nsim, i=i, j=j,
simulate=expression(rshift(pp_scaled, radius = radius)), global = global)
p <- ggplot(E1, aes(x = r, y = .data[["mmean"]])) +
geom_line(size = 1) +
geom_ribbon(aes(ymin = lo, ymax = hi), alpha = 0.25)+
geom_line(aes(x = r, y = obs), linetype = "dotted", size = 1) +
geom_line() +
labs(title = attributes(E1)$yexp) +
theme_minimal()
return(p)
}
pEnv <- plotEnvCross(pp_sel, fun = "Kcross.inhom",
"Ependymal", "OD Mature", nsim = 39, radius = 150)
#| fig-width: 5
#| fig-height: 5
pEnv
#| fig-width: 5
#| fig-height: 5
plotEnvCross(pp_sel, fun = "Kcross",
"Ependymal", "OD Mature", nsim = 39, radius = 150, global = TRUE)
#| fig-width: 10
#| fig-height: 10
plotCrossAll(pp_sel, "markconnect", "iso") +
scale_y_continuous(limits = c(0, 1))
#| echo: false
#| message: false
#| results: hide
p_epen_od <- plotCrossMetric(pp_sel, "Lcross.inhom", "Ependymal", "OD Mature", "iso")
p_epend_micro <- plotCrossMetric(pp_sel, "Lcross.inhom", "Ependymal", "Microglia", "iso")
# fig-width: 10
# fig-height: 10
p_epen_od + p_epend_micro
#| fig-width: 10
#| fig-height: 10
plotCrossAll(pp_sel, "markconnect", "iso") +
scale_y_continuous(limits = c(0, 1))
#| fig-width: 8
#| fig-height: 4
plotCrossAll(pp_sel, "Kdot.inhom", "iso")
#| fig-width: 8
#| fig-height: 4
plotCrossAll(pp_sel, "Kdot.inhom", "iso")
#| fig-width: 5
#| fig-height: 5
plotMarkCorr <- function(pp, edgecorr = "iso") {
me <- markcorr(pp)
ggplot(me, aes(x = r, y = .data[[edgecorr]])) +
geom_line(size = 1) +
geom_line(aes(x = r, y = theo), linetype = "dotted", size = 1) +
geom_line() +
labs(title = attributes(me)$yexp) +
theme_minimal()
}
plotMarkCorr(pp)
#| fig-width: 5
#| fig-height: 5
plotMarkCorr <- function(pp, edgecorr = "iso") {
me <- markcorr(pp)
ggplot(me, aes(x = r, y = .data[[edgecorr]])) +
geom_line(size = 1) +
geom_line(aes(x = r, y = theo), linetype = "dotted", size = 1) +
geom_line() +
labs(title = attributes(me)$yexp) +
theme_minimal()
}
plotMarkCorr(pp)
#| echo: true
#| message: false
#| results: hide
plotEnvCross <- function(pp, i, j, fun, nsim = 39, radius = 150, global = FALSE){
pp_scaled <- rescale(pp)
E1 <- envelope(pp_scaled, fun, nsim=nsim, i=i, j=j,
simulate=expression(rshift(pp_scaled, radius = radius)), global = global)
p <- ggplot(E1, aes(x = r, y = .data[["mmean"]])) +
geom_line(size = 1) +
geom_ribbon(aes(ymin = lo, ymax = hi), alpha = 0.25)+
geom_line(aes(x = r, y = obs), linetype = "dotted", size = 1) +
geom_line() +
labs(title = attributes(E1)$yexp) +
theme_minimal()
return(p)
}
pEnv <- plotEnvCross(pp_sel, fun = "Kcross.inhom",
"Ependymal", "OD Mature", nsim = 39, radius = 150)
#| fig-width: 5
#| fig-height: 5
pEnv
#| fig-width: 5
#| fig-height: 5
plotEnvCross(pp_sel, fun = "Kcross",
"Ependymal", "OD Mature", nsim = 39, radius = 150, global = TRUE)
#| fig-width: 15
#| fig-height: 10
plotCrossAll(pp_sel, "Kcross.inhom", "iso")
plotCrossAll <- function(ppp, fun, edgecorr){
Fall <- alltypes(ppp, fun)
df.all <- data.frame()
for (l in Fall[["fns"]]) {
attr <- paste(attributes(l)$ylab[1])
df <- data.frame(l)
df$Function <- attr
df$from <- strsplit(attr, split = '\"')[[1]][4]
df.all <- rbind(df.all, df)
}
p <- ggplot(df.all, aes(x = r, y = iso, color = Function)) +
geom_line(linewidth = 1) +
geom_line(aes(x = r, y = theo),
linetype = "dotted", linewidth = 1, color = "black") +
geom_line() +
facet_wrap(~from) +
theme_minimal() +
scale_color_brewer(palette = "Set1")
return(p)
}
#| fig-width: 15
#| fig-height: 10
plotCrossAll(pp_sel, "Kcross.inhom", "iso")
#| echo: true
#| message: false
#| results: hide
plotCrossMetric <- function(ppp, fun, from, to, edgecorr){
lce <- lohboot(ppp, fun, from = from, to = to)
p <- ggplot(lce, aes(x = r, y = .data[[edgecorr]])) +
geom_line(size = 1) +
geom_ribbon(aes(ymin = lo, ymax = hi), alpha = 0.25)+
geom_line(aes(x = r, y = theo), linetype = "dotted", size = 1) +
geom_line() +
labs(title = attributes(lce)$yexp) +
theme_minimal()
return(p)
}
p_epen_od <- plotCrossMetric(pp_sel, "Kcross.inhom",
"Ependymal", "OD Mature", "iso")
p_epend_micro <- plotCrossMetric(pp_sel, "Kcross.inhom",
"Ependymal", "Microglia", "iso")
# fig-width: 10
# fig-height: 10
p_epen_od + p_epend_micro
#| warning: false
segregation.test(pp_sel,nsim=19)
A pattern with multiple types of points can be seen in different ways. One the one hand the **multitype approach** assumes that the points $x$ were recorded together with with their labels $m$ and we assume that they were generated at the same time The locations and labels therefore have a joint distribution $P(X,M)$. On the other hand one can assume that the pattern with multiple types of points is a combination of several distinct point patterns, one for each type of point. This is the **multivariate approach** and the different point patterns form a joint distribution $P(A,B)$. To test if the labels depend on the location one can assume the following null hypotheses [@baddeleySpatialPointPatterns, pp. 565-567]:
#| fig-width: 5
#| fig-height: 5
plotMarkCorr <- function(pp, edgecorr = "iso") {
me <- markcorr(pp)
ggplot(me, aes(x = r, y = .data[[edgecorr]])) +
geom_line(size = 1) +
geom_line(aes(x = r, y = theo), linetype = "dotted", size = 1) +
geom_line() +
labs(title = attributes(me)$yexp) +
theme_minimal()
}
plotMarkCorr(pp)
#| fig-width: 5
#| fig-height: 5
plotEnvCross(pp_sel, fun = "Kcross.inhom",
"Ependymal", "OD Mature", nsim = 39, radius = 150, global = TRUE)
plot(density(unmark(pp))
plot(density(unmark(pp))
unmark(pp)
unmark(pp)
plot(density(unmark(pp)))
#| fig-width: 15
#| fig-height: 10
plotCrossAll(pp_sel, "Kcross", "iso")
#| echo: true
#| message: false
#| results: hide
plotCrossAll <- function(ppp, fun, edgecorr){
Fall <- alltypes(ppp, fun)
# Create a list of ggplot objects using lapply
plot_list <- lapply(Fall[["fns"]], function(res) {
ggplot(res, aes(x = r, y = .data[[edgecorr]])) +
geom_line(linewidth = 1) +
geom_line(aes(x = r, y = theo),
linetype = "dotted", linewidth = 1) +
geom_line() +
labs(title = attributes(res)$yexp) +
theme_minimal()
})
p <- wrap_plots(plot_list, nrow = ceiling(length(plot_list)/3), ncol = 3) +
plot_layout(guides = "collect") & theme(legend.position='bottom')
return(p)
}
#| fig-width: 15
#| fig-height: 10
plotCrossAll(pp_sel, "Kcross.inhom", "iso")
#| fig-width: 15
#| fig-height: 10
plotCrossAll(pp_sel, "Kcross", "iso")
#| fig-width: 10
#| fig-height: 10
rpd <- relrisk(pp_sel, diggle = TRUE)
dom <- im.apply(rpd, which.max)
dom <- eval.im(factor(dom, levels = seq_along(levels(unique(marks(pp_sel)))),
labels = levels(unique(marks(pp_sel)))))
plot(dom,las=2,main="Dominant mark")
im_sum <- im.apply(rp$estimate,sum)
im_sum <- signif(im_sum,9)
all(im_sum==1)
#| fig-width: 5
#| fig-height: 5
rp <- relrisk(pp_sel,se=TRUE)
plot(rp$estimate, zlim = c(0, max(rp$estimate)))
im_sum <- im.apply(rp$estimate,sum)
im_sum <- signif(im_sum,9)
all(im_sum==1)
#| fig-width: 5
#| fig-height: 5
rp <- relrisk(pp_sel,se=TRUE)
plot(rp$estimate, zlim = c(0, max(rp$estimate)))
#| include: false
#| eval: false
plotCrossAll <- function(ppp, fun, edgecorr){
Fall <- alltypes(ppp, fun)
df.all <- data.frame()
for (l in Fall[["fns"]]) {
attr <- paste(attributes(l)$ylab[1])
df <- data.frame(l)
df$Function <- attr
df$from <- strsplit(attr, split = '\"')[[1]][4]
df.all <- rbind(df.all, df)
}
p <- ggplot(df.all, aes(x = r, y = iso, color = Function)) +
geom_line(linewidth = 1) +
geom_line(aes(x = r, y = theo),
linetype = "dotted", linewidth = 1, color = "black") +
geom_line() +
facet_wrap(~from) +
theme_minimal() +
scale_color_brewer(palette = "Set1")
return(p)
}
Kcross(pp)
Kcross(pp) |> plot()
Kcross(pp, from = "Ependymal", to = "OD Mature") |> plot()
Kcross(pp, c("Ependymal","OD Mature")) |> plot()
Kcross(pp, from = c("Ependymal", "OD Mature")) |> plot()
Kcross(pp, from = "Ependymal",  to = "OD Mature") |> plot()
Kcross(pp, from = "Ependymal",  to = c("OD Mature")) |> plot()
Kcross(pp, from = "Ependymal",  to = c("OD Mature", "Ependymal")) |> plot()
Kcross(pp, from = "Ependymal",  to = c("OD Mature", "Ependymal"))
Kcross(pp, from = "Ependymal",  to = c("OD Mature"))
#| fig-width: 5
#| fig-height: 5
plotMarkCorr <- function(pp, edgecorr = "iso") {
me <- markcorr(pp)
ggplot(me, aes(x = r, y = .data[[edgecorr]])) +
geom_line(size = 1) +
geom_line(aes(x = r, y = theo), linetype = "dotted", size = 1) +
geom_line() +
labs(title = attributes(me)$yexp) +
theme_minimal()
}
plotMarkCorr(pp)
pp
plotMarkCorr(pp_sel)
me <- markcorr(pp)
me
me[["iso"]]
#| include: false
#| eval: false
plotCrossAll <- function(ppp, fun, edgecorr){
Fall <- alltypes(ppp, fun)
df.all <- data.frame()
for (l in Fall[["fns"]]) {
attr <- paste(attributes(l)$ylab[1])
df <- data.frame(l)
df$Function <- attr
df$from <- strsplit(attr, split = '\"')[[1]][4]
df.all <- rbind(df.all, df)
}
p <- ggplot(df.all, aes(x = r, y = iso, color = Function)) +
geom_line(linewidth = 1) +
geom_line(aes(x = r, y = theo),
linetype = "dotted", linewidth = 1, color = "black") +
geom_line() +
facet_wrap(~from) +
theme_minimal() +
scale_color_brewer(palette = "Set1")
return(p)
}
#| fig-width: 15
#| fig-height: 10
plotCrossAll(pp_sel, "Kcross.inhom", "iso")
length(plot_list)
#| echo: true
#| message: false
#| results: hide
plotCrossAll <- function(ppp, fun, edgecorr){
Fall <- alltypes(ppp, fun)
# Create a list of ggplot objects using lapply
plot_list <- lapply(Fall[["fns"]], function(res) {
ggplot(res, aes(x = r, y = .data[[edgecorr]])) +
geom_line(linewidth = 1) +
geom_line(aes(x = r, y = theo),
linetype = "dotted", linewidth = 1) +
geom_line() +
labs(title = attributes(res)$yexp) +
theme_minimal()
})
p <- wrap_plots(plot_list, nrow = sqrt(length(plot_list)),
ncol = sqrt(length(plot_list))) +
plot_layout(guides = "collect") & theme(legend.position='bottom')
return(p)
}
#| fig-width: 15
#| fig-height: 10
plotCrossAll(pp_sel, "Kcross.inhom", "iso")
plot(density(unmark(pp)))
#| fig-width: 15
#| fig-height: 10
plotCrossAll(pp_sel, "Kcross", "iso")
