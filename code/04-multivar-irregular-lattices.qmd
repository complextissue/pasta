---
output: html_document
editor_options: 
  chunk_output_type: console
---
# Irregular Lattices

## Dependencies

```{r}
#| label: load-libs
#| message: false
#| warning: false
#| results: hide
source("utils.R")
theme_set(theme_minimal())
```

For this representation of cells, we will rely on the `SpatialFeatureExperiment` package. For preprocessing of the dataset, we refer the reader to the [vignette](https://pachterlab.github.io/voyager/articles/vig4_cosmx.html) of the `voyager` package.

```{r}
(sfe <- HeNSCLCData())

# Empty cells
colData(sfe)$is_empty <- colData(sfe)$nCounts < 1
# Select, count negative control probes
(neg_inds <- str_detect(rownames(sfe), "^NegPrb")) %>% sum

colData(sfe)$prop_neg <- colSums(counts(sfe)[neg_inds,])/colData(sfe)$nCounts
# Remove low quality cells
sfe <- sfe[,!sfe$is_empty & sfe$prop_neg < 0.1]
# Calculate count stats
rowData(sfe)$means <- rowMeans(counts(sfe))
rowData(sfe)$vars <- rowVars(counts(sfe))
rowData(sfe)$is_neg <- neg_inds
# log Counts
sfe <- logNormCounts(sfe)
```

[MR: do these need to be recalculated?]

<!-- Markers: KRT17 (basal cells), C1QA (macrophages), IL7R (T cells), TAGLN (Smooth muscle cells) -->

In this vignette, we will show the metrics related to two marker genes: KRT17 (basal cells) and TAGLN (smooth muscle cells). 

```{r}
plotSpatialFeature(sfe, c("KRT17"),
                   colGeometryName = "centroids", 
                   ncol = 2, scattermore = TRUE) + 
  theme_void()

plotSpatialFeature(sfe, c("TAGLN"),
                   colGeometryName = "centroids", 
                   ncol = 2, scattermore = TRUE) + 
  theme_void()
```

```{r}
colGraph(sfe, "knn5") <- findSpatialNeighbors(sfe, method = "knearneigh",
                                                  dist_type = "idw", k = 5, 
                                                  style = "W")
weights_neighbourhoods <- colGraph(sfe, "knn5")
```


# Local Measures for Bivariate Data

## Bivariate Lee's L

Lee’s L is a bivariate measure that combines non-spatial Pearson Correlation with spatial autocorrelation via Moran’s I. This enables us to asses the spatial dependence of two (continuous) variables in a single measure. The measure is defined as:

$$L(x,y) = \frac{n}{\sum_{i=1}^n(\sum_{j=1}^nw_{ij})^2}\frac{\sum_{i=1}^n(\sum_{j=1}^nw_{ij}(x_i-\bar{x}))(\sum_{j=1}^nw_{ij}(y_j-\bar{y}))}{\sqrt{\sum_{i=1}^nw_{ij}(x_i-\bar{x})^2}\sqrt{\sum_{i=1}^nw_{ij}(y_i-\bar{y})^2}}, $$
where $w_{ij}$ is the spatial weights matrix for positions $i$ and $j$, $x$ and $y$ the two variables and $\bar{x}$ and $\bar{y}$ their means [MR: notation-wise, I wonder if it's better to use a and b (or something else) instead of x and y, just so that we don't confuse .. many might think x and y as the coordinate values, not the gene expression values].

[MR: maybe mention the term "co-localization" term somewhere in here .. these measure could be quite important for analyses of ligand-receptor interactions .. or at least spatial co-expression .. SpatialDM is a good reference for this: DOI=10.1038/s41467-023-39608-w]

### Implementation using `voyager`

```{r}
sfe <- runBivariate(sfe, type = "locallee",
                    feature1 = "KRT17", feature2 = "TAGLN")

plotLocalResult(sfe, "locallee", 
                features = localResultFeatures(sfe, "locallee"),
                ncol = 2, colGeometryName = "centroids")
```

[MR: for this plot above, is it worth having a dual-colour .. because there are both positive and negative values .. could be worth having 0 as the lightest colour and one colour for +, another for -]

### Implementation using `spdep`

```{r}
loc <- lee(x = logcounts(sfe)["KRT17",],
           y = logcounts(sfe)["TAGLN",],
           n = length(logcounts(sfe)["TAGLN",]),
           listw = weights_neighbourhoods)

#convert into a plain sf object for plotting
sf <- colGeometries(sfe)$cellSeg

sf$locEffect <- loc$localL

tm_shape(sf) + tm_fill(col = 'locEffect')  
```

[MR: do we need both implementations?]



# Local Measures for Multivariate Data

## Multivariate local Geary's C

Geary’s C is a measure of spatial autocorrelation that is based on the difference between a variable and its neighbours. It is defined as:

$$C_i = \sum_{j=1}^n w_{ij}(z_i-z_j)^2,$$

and can be generalized to $k$ parameters by expanding 

$$c_{k,i} = \sum_{v=1}^k c_{v,i}$$

where $c_{v,i}$ is the local Geary’s C for the $v$th variable at location $i$. Compared to bivariates Lee it means that we use more than two variables. [MR: I don't have a good intution for the extension to multiple variables here .. say we had 10 genes, how do we interpret that? It seems like the bivariate version is quite straightforward to digest, but beyond that I find it confusing. OK, but your example below is only with 2.]

We will use the two marker genes to calculate the multi-variate Geary's C. 

```{r}
hvgs <- getTopHVGs(sfe, fdr.threshold = 0.01)

sfe <- runMultivariate(sfe, type = "localC_multi",
                    subset_row = c("KRT17", "TAGLN"),
                    dest = "colData")

# plotLocalResult(sfe, "localC_multi", features = c("KRT17"), ncol = 2,
#                 colGeometryName = "centroids")

# Local C mutli is stored in colData so this is a workaround to plot it
plotSpatialFeature(sfe,"localC_multi", colGeometryName = "centroids")
```

The plot indicates regions where the gene expression is more similar homogeneous [MR: "more similar homogeneous" sounds weird .. can we just say "more homogeneous" or "more similar"?] (low Geary's C) and regions where the gene expression is more dissimilar heterogeneous [MR: same here] (large Geary's C value). Importantly, strong similarity in one or some variables may compensate for dissimilarity in other variables [MR: this makes interpretation tricky/confusing]. The local Geary’s C value is not scaled.

Note that the computation is very cost intensive.

```{r}
sfe <- runMultivariate(sfe, type = "localC_perm_multi",
                    subset_row = c("KRT17", "TAGLN"),
                    dest = "colData")

# Local C mutli is stored in colData so this is a workaround to plot it
plotSpatialFeature(sfe,"localC_perm_multi", colGeometryName = "centroids")
```

We can further plot the results of the permutation test. This can indicate interesting regions, but should be interpreted with care for various reasons. For example, since we are looking for similarity in a combination of multiple values, the exact combination is not known. For further details, see Anselin (2019). [MR: this makes me question how we should present this.]

```{r}
loc <- localC_perm(x = t(as.matrix(logcounts(sfe)[c("KRT17", "TAGLN"),])),
       listw = weights_neighbourhoods, nsim = 1)

#convert into a plain sf object for plotting
sf <- colGeometries(sfe)$cellSeg

sf$locEffect <- loc

tm_shape(sf) + tm_fill(col = 'locEffect')  
```

It would be interesting to do this not only on the cell level, but also on the *domain* level.

## Local Neighbor Match Test

This test is useful to assess the overlap of the k-nearest neighbour from physical distances (tissue space) with the k-nearest neighbours from the gene expression measurements (attribute space).

[MR: how are the KNNs calculated in the attribute space?]

```{r}
sf <- colGeometries(sfe)$cellSeg
sf <- cbind(sf,  t(as.matrix(logcounts(sfe)[c(hvgs),])))

nbr_test <- neighbor_match_test(sf[c(hvgs)], k = 20)

sf$Probability <- nbr_test$Probability
sf$Cardinality <- nbr_test$Cardinality

tm_shape(sf) + tm_fill(col = 'Probability')  
tm_shape(sf) + tm_fill(col = 'Cardinality')  
```

Cardinality is a measure of how many neighbours of each cell are in common. Some regions show high cardinality with low probability. On the cellular level, this might not be very informative and lead to regions with high similarity. We only see very few cells with a cardinality greater than 0. The problem might come from the imperfect segmentation of the cells, which can result in a poor reconstruction of the "geographical" tissue neighbourhood graph. In addition, as the number of dimensions increase, the empty space between observations also increases; this is known as the empty space problem. 

Again, this analysis should probably be performed on a structure level instead of a single cell level.  

[MR: should we do the analysis at the structure/domain level then?]

# References

Anselin, Luc. 1995. “Local Indicators of Spatial Association—LISA.” Geogr. Anal. 27 (2): 93–115.
———. 2019. “A Local Indicator of Multivariate Spatial Association: Extending Geary’s c.” Geogr. Anal. 51 (2): 133–50.

# Appendix

## Session info

```{r}
#| label: session-info
sessionInfo()
```
